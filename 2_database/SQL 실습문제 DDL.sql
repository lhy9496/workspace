--1. 테이블 TB_CATEGORY 작성
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

--2. 테이블 TB_CLASS_TYPE 작성
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) CONSTRAINT NO_PK PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3. PRIMARY KEY 제약 조건 넣기
ALTER TABLE TB_CATEGORY MODIFY NAME CONSTRAINT NAME_PK PRIMARY KEY;

--4. NO NULL 제약 조건 넣기
ALTER TABLE TB_CLASS_TYPE MODIFY NAME CONSTRAINT NAME_NN NOT NULL;

--5. VARCHAR2 크기 변경
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);

--6. 컬럼명 변경
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;

--7. PRIMARY KEY 이름 변경
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT NO_PK TO PK_CLASS_TYPE_NO;
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT NAME_PK TO PK_CATEGORY_NAME;

--8. INSERT문 수행
INSERT INTO TB_CATEGORY VALUES('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES('인문사회', 'Y');
COMMIT;

--9. FOREIGN KEY 지정
ALTER TABLE TB_DEPARTMENT MODIFY CATEGORY CONSTRAINT FK_DEPARTMENT_CATEGORY
REFERENCES TB_CATEGORY(CATEGORY_NAME);


--10. 뷰문 작성

CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS "주소"
    FROM TB_STUDENT;
SELECT * FROM "VW_학생일반정보";

--11. 뷰문 작성2
CREATE OR REPLACE VIEW VW_지도면담
AS SELECT STUDENT_NAME AS "학생이름", DEPARTMENT_NAME AS "학과이름"
        , NVL2(COACH_PROFESSOR_NO, PROFESSOR_NAME, '지도교수 없음')AS "지도교수이름"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
    ORDER BY DEPARTMENT_NAME;
SELECT * FROM "VW_지도면담";

--12. 뷰문 작성
CREATE VIEW VW_학과별학생수
AS SELECT DEPARTMENT_NAME, COUNT(*) AS STUDENT_COUNT
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;
SELECT * FROM "VW_학과별학생수";
    
--13. 뷰문으로 정보 수정
UPDATE VW_학생일반정보
SET 학생이름 = '이호연'
WHERE 학번 = 'A213046';

--14. 데이터 변경 방지용 VIEW문으로 재작성
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS "주소"
    FROM TB_STUDENT
    WITH READ ONLY;

--15. 최근 3년간 수강 인원이 가장 많았던 3과목을 찾는 구문 작성

--15_1)최근 3년으로 범위 좁히기
SELECT *
FROM TB_GRADE
WHERE SUBSTR(TERM_NO, 1, 4) IN ('2009', '2008', '2007')
ORDER BY TERM_NO DESC;

--15_2)최근 3년간 과목별 누적수강생수를 내림차수로 정렬
SELECT CLASS_NO, COUNT(*) AS "누적수강생수(명)"
     FROM (SELECT *
           FROM TB_GRADE
           WHERE SUBSTR(TERM_NO, 1, 4) IN ('2009', '2008', '2007')
           ORDER BY TERM_NO DESC)
     GROUP BY CLASS_NO
     ORDER BY "누적수강생수(명)" DESC;

--15_3)과목 이름까지 포함해서 상위 3개만 골라서 정렬
SELECT CLASS_NO AS "과목번호", CLASS_NAME AS "과목이름", "누적수강생수(명)"
FROM(SELECT CLASS_NO, COUNT(*) AS "누적수강생수(명)"
     FROM (SELECT *
           FROM TB_GRADE
           WHERE SUBSTR(TERM_NO, 1, 4) IN ('2009', '2008', '2007')
           ORDER BY TERM_NO DESC)
     GROUP BY CLASS_NO
     ORDER BY "누적수강생수(명)" DESC)
JOIN TB_CLASS USING (CLASS_NO)
WHERE ROWNUM <= 3;

--유레카!